virtualenv用于创建独立的Python环境，多个Python相互独立，互不影响，它能够：
1. 在没有权限的情况下安装新套件
2. 不同应用可以使用不同的套件版本
3. 套件升级不影响其他应用

安装
sudo apt-get install python-virtualenv

使用方法
virtualenv [虚拟环境名称] 
-p python3 指定python版本

启动虚拟环境
cd [虚拟环境名称] 
source ./bin/activate

退出虚拟环境
deactivate

在虚拟环境安装Python套件
pip install [套件名称]
如果没有启动虚拟环境，系统也安装了pip工具，那么套件将被安装在系统环境中，为了避免发生此事，可以在~/.bashrc文件中加上：
export PIP_REQUIRE_VIRTUALENV=true
或者让在执行pip的时候让系统自动开启虚拟环境：
export PIP_RESPECT_VIRTUALENV=true


Virtualenvwrapper
Virtaulenvwrapper是virtualenv的扩展包，用于更方便管理虚拟环境，它可以做：
1. 将所有虚拟环境整合在一个目录下
2. 管理（新增，删除，复制）虚拟环境
3. 切换虚拟环境
4. ...

安装
sudo easy_install virtualenvwrapper  

此时还不能使用virtualenvwrapper，默认virtualenvwrapper安装在/usr/share/virtualenvwrapper/下面，实际上你需要运行virtualenvwrapper.sh文件才行，先别急，打开这个文件看看,里面有安装步骤，我们照着操作把环境设置好。
    创建目录用来存放虚拟环境
    mkdir $HOME/.virtualenvs
    在~/.bashrc中添加行： export WORKON_HOME=$HOME/.virtualenvs
    在~/.bashrc中添加行：source /usr/local/bin/virtualenvwrapper.sh
    运行： source ~/.bashrc
此时virtualenvwrapper就可以使用了。

启动/切换虚拟环境
workon [虚拟环境名称]

列出虚拟环境列表
workon也可以使用lsvirtualenv

删除虚拟环境
rmvirtualenv [虚拟环境名称]

