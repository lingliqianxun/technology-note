1、rsyncd.conf常用配置

motd file = /etc/rsyncd.motd  #rsync启动时欢迎信息页面文件位置（文件内容自定义）
pid file = /var/run/rsyncd.pid  #pid文件的存放位置
port = 873  #默认端口
address =  #自定义ip地址
socket options =  #自定义套接字
listen backlog =  #连接数默认为5

[module_name]  #自定义模块名称
comment = public archive  #模块描述，一同显示给客户，默认没有描述定义
path = /var/www/pub/ #指定该模块的供备份的目录树路径，该参数是必须指定的
use chroot = yes  #默认为true，拥有者、组等信息同步与否
max connections = 10  #最大连接数
log file = /var/log/rsyncd.log  #日志文件位置，启动rsync后自动产生这个文件，无需提前创建
lock file = /var/run/rsyncd.lock  #支持max connections参数的锁文件
read only = yes  #默认为true，客户端只读
list = yes  #默认为true，显示rsync服务端模块列表
uid = nobody  #守护进程默认权限为nobody
gid = nogroup  #守护进程默认权限为nogroup
exlude =  #例外文件
exclude from =  #例外模块文件
include =  #包含文件
include from =  #包含模块文件
auth users = test  #认证用户列表，默认情况下无需密码就可以连接模块
secrets file = /etc/rsyncd.secrets  #定义用户名:密码对的文件
strict modes = yes  #该选项指定是否监测密码文件的权限，如果该选项值为true那么密码文件只能被rsync服务器运行身份的用户访问，其他任何用户不可以访问该文件。默认值为true。
hosts allow =  #允许的地址，逗号隔开
hosts deny =  #不允许的地址
ignore errors = no  #指定rsyncd在判断是否运行传输时的删除操作时忽略server上的IP错误
ignore nonreadable = yes  #指定rysnc服务器完全忽略那些用户没有访问权限的文件。这对于在需要备份的目录中有些文件是不应该被备份者得到的情况是有意义的。
transfer logging = no  #是否使rsync服务器使用ftp格式的文件来记录下载和上载操作在自己单独的日志中
timeout = 600  #超时时间
log format = %t: host %h (%a) %o %f (%l bytes). Total %b bytes.  #日志格式
refuse options = checksum dry-run  #通过该选项可以定义一些不允许客户对该模块使用的命令参数列表
dont compress = *.gz *.tgz *.zip *.z *.rpm *.deb *.iso *.bz2 *.tbz  #用来指定那些不进行压缩处理再传输的文件

[其他查看文档:https://download.samba.org/pub/rsync/rsyncd.conf.html]


2、rsync参数

============================================

-v, --verbose 详细模式输出

-q, --quiet 精简输出模式

-c, --checksum 打开校验开关，强制对文件传输进行校验

-a, --archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD

-r, --recursive 对子目录以递归模式处理

-R, --relative 使用相对路径信息

-b, --backup 创建备份，也就是对于目的已经存在有同样的文件名时，将老的文件重新命名为~filename。可以使用--suffix选项来指定不同的备份文件前缀。

--backup-dir 将备份文件(如~filename)存放在在目录下。

-suffix=SUFFIX 定义备份文件前缀

-u, --update 仅仅进行更新，也就是跳过所有已经存在于DST，并且文件时间晚于要备份的文件。(不覆盖更新的文件)

-l, --links 保留软链结

-L, --copy-links 想对待常规文件一样处理软链结

--copy-unsafe-links 仅仅拷贝指向SRC路径目录树以外的链结

--safe-links 忽略指向SRC路径目录树以外的链结

-H, --hard-links 保留硬链结

-p, --perms 保持文件权限

-o, --owner 保持文件属主信息

-g, --group 保持文件属组信息

-D, --devices 保持设备文件信息

-t, --times 保持文件时间信息

-S, --sparse 对稀疏文件进行特殊处理以节省DST的空间

-n, --dry-run现实哪些文件将被传输

-W, --whole-file 拷贝文件，不进行增量检测

-x, --one-file-system 不要跨越文件系统边界

-B, --block-size=SIZE 检验算法使用的块尺寸，默认是700字节

-e, --rsh=COMMAND 指定使用rsh、ssh方式进行数据同步

--rsync-path=PATH 指定远程服务器上的rsync命令所在路径信息

-C, --cvs-exclude 使用和CVS一样的方法自动忽略文件，用来排除那些不希望传输的文件

--existing 仅仅更新那些已经存在于DST的文件，而不备份那些新创建的文件

--delete 删除那些DST中SRC没有的文件

--delete-excluded 同样删除接收端那些被该选项指定排除的文件

--delete-after 传输结束以后再删除

--ignore-errors 及时出现IO错误也进行删除

--max-delete=NUM 最多删除NUM个文件

--partial 保留那些因故没有完全传输的文件，以是加快随后的再次传输

--force 强制删除目录，即使不为空

--numeric-ids 不将数字的用户和组ID匹配为用户名和组名

--timeout=TIME IP超时时间，单位为秒

-I, --ignore-times 不跳过那些有同样的时间和长度的文件

--size-only 当决定是否要备份文件时，仅仅察看文件大小而不考虑文件时间

--modify-window=NUM 决定文件是否时间相同时使用的时间戳窗口，默认为0

-T --temp-dir=DIR 在DIR中创建临时文件

--compare-dest=DIR 同样比较DIR中的文件来决定是否需要备份

-P 等同于 --partial

--progress 显示备份过程

-z, --compress 对备份的文件在传输时进行压缩处理

--exclude=PATTERN 指定排除不需要传输的文件模式

--include=PATTERN 指定不排除而需要传输的文件模式

--exclude-from=FILE 排除FILE中指定模式的文件

--include-from=FILE 不排除FILE指定模式匹配的文件

--version 打印版本信息

--address 绑定到特定的地址

--config=FILE 指定其他的配置文件，不使用默认的rsyncd.conf文件

--port=PORT 指定其他的rsync服务端口

--blocking-io 对远程shell使用阻塞IO

-stats 给出某些文件的传输状态

--progress 在传输时现实传输过程

--log-format=formAT 指定日志文件格式

--password-file=FILE 从FILE中得到密码

--bwlimit=KBPS 限制I/O带宽，KBytes per second

-h, --help 显示帮助信息

============================================



